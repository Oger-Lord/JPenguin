/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */

/*
 * NewEditor.java
 *
 * Created on 23.01.2012, 17:43:27
 */
package de.jpenguin.editor;

import de.jpenguin.editor.engine.EditorApplication;
import com.jme3.app.Application;
import com.jme3.app.SimpleApplication;
import com.jme3.system.AppSettings;
import com.jme3.system.JmeCanvasContext;
import com.jme3.util.JmeFormatter;
import java.awt.BorderLayout;
import java.awt.Canvas;
import java.awt.Container;
import java.awt.Dimension;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.event.WindowAdapter;
import java.awt.event.WindowEvent;
import java.util.concurrent.Callable;
import java.util.logging.ConsoleHandler;
import java.util.logging.Handler;
import java.util.logging.Logger;
import javax.swing.*;
/**
 *
 * @author Karsten
 */
public class EditorGUI extends javax.swing.JFrame {

    private static Editor editor;
            
    /** Creates new form NewEditor */
    public EditorGUI(String title) {
        setTitle(title);
        //initComponents();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    
    public void test()
    {
        initComponents();
    }
    
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jButtonTypeManager = new javax.swing.JButton();
        jButtonSelection = new javax.swing.JButton();
        jButtonUndo = new javax.swing.JButton();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenu1 = new javax.swing.JMenu();
        jMenuItemNew = new javax.swing.JMenuItem();
        jMenuItemLoad = new javax.swing.JMenuItem();
        jMenuItemSave = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        jMenuItemSettings = new javax.swing.JMenuItem();
        jMenuAdvanced = new javax.swing.JMenu();
        jMenuItemPlayer = new javax.swing.JMenuItem();
        jMenuItemMapDescription = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setName("frame"); // NOI18N

        jPanel1.setMaximumSize(new java.awt.Dimension(32767, 50));
        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jButtonTypeManager.setText("Type Manager");
        jButtonTypeManager.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonTypeManagerMouseClicked(evt);
            }
        });
        jPanel1.add(jButtonTypeManager, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 0, -1, -1));

        jButtonSelection.setText("Selection");
        jButtonSelection.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButtonSelectionMouseClicked(evt);
            }
        });
        jPanel1.add(jButtonSelection, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, -1, -1));

        jButtonUndo.setText("Undo");
        jButtonUndo.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonUndoActionPerformed(evt);
            }
        });
        jPanel1.add(jButtonUndo, new org.netbeans.lib.awtextra.AbsoluteConstraints(210, 0, -1, -1));

        getContentPane().add(jPanel1, java.awt.BorderLayout.NORTH);

        jMenu1.setText("File");

        jMenuItemNew.setText("New");
        jMenuItemNew.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItemNewMouseReleased(evt);
            }
        });
        jMenu1.add(jMenuItemNew);

        jMenuItemLoad.setText("Load");
        jMenuItemLoad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItemLoadMouseReleased(evt);
            }
        });
        jMenu1.add(jMenuItemLoad);

        jMenuItemSave.setText("Save");
        jMenuItemSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseReleased(java.awt.event.MouseEvent evt) {
                jMenuItemSaveMouseReleased(evt);
            }
        });
        jMenu1.add(jMenuItemSave);

        jMenuBar1.add(jMenu1);

        jMenu2.setText("Edit");

        jMenuItemSettings.setText("Settings");
        jMenuItemSettings.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSettingsActionPerformed(evt);
            }
        });
        jMenu2.add(jMenuItemSettings);

        jMenuBar1.add(jMenu2);

        jMenuAdvanced.setText("Advanced");

        jMenuItemPlayer.setText("Player");
        jMenuItemPlayer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemPlayerActionPerformed(evt);
            }
        });
        jMenuAdvanced.add(jMenuItemPlayer);

        jMenuItemMapDescription.setText("Map Description");
        jMenuItemMapDescription.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemMapDescriptionActionPerformed(evt);
            }
        });
        jMenuAdvanced.add(jMenuItemMapDescription);

        jMenuBar1.add(jMenuAdvanced);

        setJMenuBar(jMenuBar1);
    }// </editor-fold>//GEN-END:initComponents

private void jButtonTypeManagerMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonTypeManagerMouseClicked

    editor.newTypeManager();
}//GEN-LAST:event_jButtonTypeManagerMouseClicked

private void jMenuItemLoadMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemLoadMouseReleased
    editor.load();
}//GEN-LAST:event_jMenuItemLoadMouseReleased

private void jMenuItemSaveMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemSaveMouseReleased
    editor.save();
}//GEN-LAST:event_jMenuItemSaveMouseReleased

private void jMenuItemNewMouseReleased(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemNewMouseReleased
    editor.newOne();
}//GEN-LAST:event_jMenuItemNewMouseReleased

private void jButtonSelectionMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButtonSelectionMouseClicked
    editor.getEditorApplication().getObjectManager().setModusPlant(false);
    
    //jButtonSelection.setEnabled(false);
  // app.enableSelection(true);
}//GEN-LAST:event_jButtonSelectionMouseClicked

private void jButtonUndoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonUndoActionPerformed
   editor.undo();
}//GEN-LAST:event_jButtonUndoActionPerformed

private void jMenuItemSettingsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSettingsActionPerformed
    editor.displaySettings();
}//GEN-LAST:event_jMenuItemSettingsActionPerformed

private void jMenuItemPlayerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemPlayerActionPerformed
     editor.newPlayerGUI();
}//GEN-LAST:event_jMenuItemPlayerActionPerformed

private void jMenuItemMapDescriptionActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemMapDescriptionActionPerformed
    editor.newMapDescriptionGUI();
}//GEN-LAST:event_jMenuItemMapDescriptionActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonSelection;
    private javax.swing.JButton jButtonTypeManager;
    private javax.swing.JButton jButtonUndo;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenu jMenuAdvanced;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenuItem jMenuItemLoad;
    private javax.swing.JMenuItem jMenuItemMapDescription;
    private javax.swing.JMenuItem jMenuItemNew;
    private javax.swing.JMenuItem jMenuItemPlayer;
    private javax.swing.JMenuItem jMenuItemSave;
    private javax.swing.JMenuItem jMenuItemSettings;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

 
    private static JmeCanvasContext context;
    private static Canvas canvas;
    private static EditorApplication app;
    private static JFrame frame;
    private static Container canvasPanel1, canvasPanel2;
    private static Container currentPanel;
    private static JTabbedPane tabbedPane;
    private static final String appClass = "Editor.TerrainEditor";
    private static String title;

    
    private static void createTabs(){
        canvasPanel1 = new JPanel();
       canvasPanel1.setLayout(new BorderLayout());
        
        currentPanel = canvasPanel1;
        frame.getContentPane().add(currentPanel,BorderLayout.CENTER);
    }
    
    private static void createFrame(String title){
        frame = new EditorGUI(title);
        frame.setDefaultCloseOperation(JFrame.DISPOSE_ON_CLOSE);
        frame.addWindowListener(new WindowAdapter(){
            @Override
            public void windowClosed(WindowEvent e) {
                app.stop();
            }
        });

        createTabs();
    }

    public EditorApplication getEditorApplication()
    {
        return app;
    }
    
    public static void createCanvas(String appClass){
        AppSettings settings = new AppSettings(true);
        settings.setWidth(1024);
        settings.setHeight(768);
        settings.setFrameRate(50);

        
        
        /*
        try{
            Class<? extends TerrainEditor> clazz = (Class<? extends TerrainEditor>) Class.forName(appClass);
            app = clazz.newInstance();
        }catch (ClassNotFoundException ex){
            ex.printStackTrace();
        }catch (InstantiationException ex){
            ex.printStackTrace();
        }catch (IllegalAccessException ex){
            ex.printStackTrace();
        }*/
        app = new EditorApplication();
        
        app.setPauseOnLostFocus(false);
        app.setSettings(settings);
        app.createCanvas();
        app.startCanvas();

        context = (JmeCanvasContext) app.getContext();
        canvas = context.getCanvas();
        canvas.setSize(settings.getWidth(), settings.getHeight());
    }

    public static void startApp(){
        editor.setEditorApplication(app);
        
        app.startCanvas();
        app.enqueue(new Callable<Void>(){
            public Void call(){
                if (app instanceof EditorApplication){
                    //SimpleApplication simpleApp = (SimpleApplication) app;
                    //app.getFlyByCamera().setDragToRotate(true);
                    app.createTools(editor.getTypeXML());
                    //app.newTerrain();
                    app.load();
                }
                return null;
            }
        });
        
    }
    
    public static EditorGUI newEditorGUI(Editor edit,String path,String title)
    {
        editor=edit;
        EditorGUI.title=title;
        
       JmeFormatter formatter = new JmeFormatter();

        Handler consoleHandler = new ConsoleHandler();
        consoleHandler.setFormatter(formatter);

        Logger.getLogger("").removeHandler(Logger.getLogger("").getHandlers()[0]);
        Logger.getLogger("").addHandler(consoleHandler);
        
        createCanvas(appClass);
        
        try {
            Thread.sleep(500);
        } catch (InterruptedException ex) {
        }
        
        SwingUtilities.invokeLater(new Runnable(){
            public void run(){
                JPopupMenu.setDefaultLightWeightPopupEnabled(false);

                createFrame(EditorGUI.title);
                
                currentPanel.add(canvas, BorderLayout.CENTER);
                
                frame.pack();
                startApp();
                
                ((EditorGUI)frame).test();
                
                frame.setLocationRelativeTo(null);
                frame.setVisible(true);

            }
        });
        return (EditorGUI)frame;
    }
    
    public static EditorGUI getInstance()
    {
        return (EditorGUI)frame;
    }
    
}
